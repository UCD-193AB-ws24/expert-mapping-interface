name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    
jobs:
  # --- Job 1: Build, Test, and Process Data ---
  build-and-test:
    runs-on: ubuntu-latest 

    steps:
      # Fetches the latest code from the repository branch that triggered the workflow.
      - name: Checkout code
        uses: actions/checkout@v4

      # Installs the specified version of Node.js and configures caching for npm dependencies.
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # Installs all necessary Node.js packages defined in package-lock.json.
      - name: Install dependencies
        run: npm install

      # Compiles the React frontend code into static assets for deployment.
      - name: Build project
        run: npm run build 
        continue-on-error: false

      # Saves the built React application (from the './build' directory) as an artifact.
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: ./build
          retention-days: 1

  # --- Job 2: Deploy to GitHub Pages ---
  deploy-to-github-pages:
    environment:
      name: github-pages

    needs: build-and-test

    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'

    permissions:
      pages: write # Permission to write to GitHub Pages
      id-token: write # Permission for OIDC token authentication (secure deployment)

    steps:
      # Checkout code again in this job
      - name: Checkout code
        uses: actions/checkout@v4

      # Retrieves the 'build-output' artifact saved by the 'build-and-test' job.
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: ./build

      # Verify the build folder contents
      - name: Check build folder
        run: |
          ls -la
          ls -la build || echo "Build folder not found"

      # Sets up the runner environment for deploying to GitHub Pages.
      - name: Setup Pages
        uses: actions/configure-pages@v4

      # Uploads the downloaded build directory specifically for the Pages deployment action.
      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build' # Path to the directory containing the static site

      # Executes the actual deployment to GitHub Pages using the uploaded artifact.
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4